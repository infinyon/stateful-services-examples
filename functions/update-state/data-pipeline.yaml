apiVersion: 0.3.0
meta:
  name: update-state-example
  version: 0.1.0
  namespace: examples

config:
  converter: json

types:
  temp:
    type: object
    properties:
      id:
        type: i32
      sensor:
        type: string
      temperature:
        type: f32

topics:
  temp-sensor:
    schema:
      value:
        type: temp

services:
  save-temperature:
    sources:
      - type: topic
        id: temp-sensor
    states:
      - name: temperature
        type: keyed-state
        properties:
          key:
            type: string
          value:
            type: arrow-row
            properties:
              sensor:
                type: string
              temperature:
                type: f32

    transforms:
      steps:
        - operator: assign-key
          run: |
            fn key_by_id(event: Temp) -> Result<i32, String> {
              Ok(event.id)
            }

        - operator: update-state
          run: |
            fn update_temperature(event: Temp) -> Result<(), String> {
              let mut temp = temperature();
              
              temp.sensor = event.sensor;
              temp.temperature = event.temperature;
              temp.update();

              Ok(())
            }
