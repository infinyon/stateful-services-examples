apiVersion: 0.4.0
meta:
  name: split
  version: 0.1.0
  namespace: examples

config:
  converter: json

types:
  car:
    type: object
    properties:
      car:
        type: string
      category:
        type: string
      license:
        type: string
  truck:
    type: object
    properties:
      truck:
        type: string
      license:
        type: string
  sedan:
    type: object
    properties:
      sedan:
        type: string
      license:
        type: string

topics:
  cars:
    schema:
      value:
        type: car
  trucks:
    schema:
      value:
        type: truck
  sedans:
    schema:
      value:
        type: sedan

services:
  split-service:
    sources:
      - type: topic
        id: cars

    sinks:
      - type: topic
        id: trucks
        steps:
          - operator: filter-map
            run: |
              fn to_truck(car: Car) -> Result<Option<Truck>, String> {
                match car.category.as_str() {
                  "truck" => Ok(Some(
                      Truck {truck: car.car, license: car.license
                    })),
                  _ => Ok(None)
                }
              }
      - type: topic
        id: sedans
        steps:
          - operator: filter-map
            run: |
              fn to_sedan(car: Car) -> Result<Option<Sedan>, String> {
                match car.category.as_str() {
                  "sedan" => Ok(Some(
                      Sedan {sedan: car.car, license: car.license
                    })),
                  _ => Ok(None)
                }
              }
